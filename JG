import os

class Inventario:
    def __init__(self, archivo='inventario.txt'):
        self.archivo = archivo
        self.productos = self.cargar_inventario()

    def cargar_inventario(self):
        """Carga el inventario desde el archivo, o crea uno nuevo si no existe."""
        if not os.path.exists(self.archivo):
            with open(self.archivo, 'w') as f:
                pass  # Crea el archivo si no existe
            return {}

        productos = {}
        try:
            with open(self.archivo, 'r') as f:
                for linea in f:
                    id_producto, nombre, cantidad, precio = linea.strip().split(',')
                    productos[id_producto] = {
                        'nombre': nombre,
                        'cantidad': int(cantidad),
                        'precio': float(precio)
                    }
        except (FileNotFoundError, PermissionError) as e:
            print(f"Error al cargar el inventario: {e}")
        return productos

    def guardar_inventario(self):
        """Guarda el inventario en el archivo."""
        try:
            with open(self.archivo, 'w') as f:
                for id_producto, datos in self.productos.items():
                    f.write(f"{id_producto},{datos['nombre']},{datos['cantidad']},{datos['precio']}\n")
        except (FileNotFoundError, PermissionError) as e:
            print(f"Error al guardar el inventario: {e}")

    def agregar_producto(self, id_producto, nombre, cantidad, precio):
        """Agrega un nuevo producto al inventario."""
        if id_producto in self.productos:
            print(f"El producto con ID {id_producto} ya existe.")
            return

        self.productos[id_producto] = {
            'nombre': nombre,
            'cantidad': cantidad,
            'precio': precio
        }
        self.guardar_inventario()
        print(f"Producto {nombre} agregado exitosamente.")

    def actualizar_producto(self, id_producto, nombre=None, cantidad=None, precio=None):
        """Actualiza un producto existente en el inventario."""
        if id_producto not in self.productos:
            print(f"El producto con ID {id_producto} no existe.")
            return

        if nombre is not None:
            self.productos[id_producto]['nombre'] = nombre
        if cantidad is not None:
            self.productos[id_producto]['cantidad'] = cantidad
        if precio is not None:
            self.productos[id_producto]['precio'] = precio
        
        self.guardar_inventario()
        print(f"Producto con ID {id_producto} actualizado exitosamente.")

    def eliminar_producto(self, id_producto):
        """Elimina un producto del inventario."""
        if id_producto not in self.productos:
            print(f"El producto con ID {id_producto} no existe.")
            return

        del self.productos[id_producto]
        self.guardar_inventario()
        print(f"Producto con ID {id_producto} eliminado exitosamente.")

    def mostrar_inventario(self):
        """Muestra todos los productos en el inventario."""
        if not self.productos:
            print("El inventario está vacío.")
            return

        for id_producto, datos in self.productos.items():
            print(f"ID: {id_producto}, Nombre: {datos['nombre']}, Cantidad: {datos['cantidad']}, Precio: {datos['precio']}")

# Ejemplo de uso
if __name__ == "__main__":
    inventario = Inventario()

    # Añadir productos
    inventario.agregar_producto('001', 'Laptop', 10, 1500.00)
    inventario.agregar_producto('002', 'Ratón', 50, 25.00)

    # Mostrar inventario
    inventario.mostrar_inventario()

    # Actualizar producto
    inventario.actualizar_producto('001', cantidad=8)

    # Eliminar producto
    inventario.eliminar_producto('002')

    # Mostrar inventario
    inventario.mostrar_inventario()
